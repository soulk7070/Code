# ==============================
# üì¶ COMFYUI SETUP + DOWNLOAD + RUN (COLAB-SAFE)
# ==============================
# ‚ñ∂Ô∏è TODO: isi dulu
CLOUDFLARE_TUNNEL_TOKEN = "ISI_TOKEN_TUNNEL_CLOUDFLARE_KAMU"
YOUR_DOMAIN = "comfy.ruangjiwa.online"  # opsional, info saja
HF_TOKEN = "ISI_TOKEN_HUGGINGFACE_BILA_PERLU"  # boleh kosong

import os, sys, subprocess, textwrap, time, shutil

BASE = "/content"
COMFY = f"{BASE}/ComfyUI"
PORT = 8188
PY = sys.executable
CLOUDFLARED_BIN = f"{BASE}/cloudflared-linux-amd64"

def sh(cmd):
    print("‚Üí", cmd)
    p = subprocess.run(cmd, shell=True, text=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    print(p.stdout)

# 0) Update & cloudflared binary
sh("apt -y update -qq")
if not os.path.exists(CLOUDFLARED_BIN):
    sh(f"wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O {CLOUDFLARED_BIN}")
    sh(f"chmod +x {CLOUDFLARED_BIN}")
else:
    print("‚úî cloudflared sudah ada")

# 1) Clone ComfyUI
if not os.path.isdir(COMFY):
    sh(f"git clone -q https://github.com/comfyanonymous/ComfyUI {COMFY}")
else:
    print("‚úî ComfyUI sudah ada")

# 2) Pasang ComfyUI-Manager (biar gampang tambah custom nodes)
mgr = f"{COMFY}/custom_nodes/ComfyUI-Manager"
if not os.path.isdir(mgr):
    sh(f"git clone -q https://github.com/ltdrdata/ComfyUI-Manager {mgr}")
else:
    print("‚úî ComfyUI-Manager sudah ada")

# 3) Pasang custom node: Crystools
crys = f"{COMFY}/custom_nodes/ComfyUI-Crystools"
if not os.path.isdir(crys):
    sh(f"cd {COMFY}/custom_nodes && git clone https://github.com/crystian/ComfyUI-Crystools.git")
else:
    print("‚úî ComfyUI-Crystools sudah ada")

# 4) Dependencies (Fix 'torchsde' missing)
sh(f"{PY} -m pip -q install --upgrade pip")
sh(f"{PY} -m pip -q install -r {COMFY}/requirements.txt")
sh(f"{PY} -m pip -q install torchsde==0.2.5 deepdiff piexif py-cpuinfo pynvml requests tqdm")
# opsional buat T4 Colab
sh(f"{PY} -m pip -q install xformers triton || true")

# 5) Folder models
for sub in ["diffusion_models","clip","vae","upscale_models"]:
    os.makedirs(f"{COMFY}/models/{sub}", exist_ok=True)

# 6) Download models (sesuai listmu)
# FLUX.1 dev (GGUF)
sh(f"wget -q --show-progress -O '{COMFY}/models/diffusion_models/flux1-dev-Q4_0.gguf' "
   "'https://huggingface.co/city96/FLUX.1-dev-gguf/resolve/main/flux1-dev-Q4_0.gguf?download=true'")

# T5 encoders (GGUF)
sh(f"wget -q --show-progress -O '{COMFY}/models/clip/t5-v1_1-xxl-encoder-Q5_K_M.gguf' "
   "'https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q5_K_M.gguf?download=true'")
sh(f"wget -q --show-progress -O '{COMFY}/models/clip/t5-v1_1-xxl-encoder-Q4_K_S.gguf' "
   "'https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q4_K_S.gguf?download=true'")

# Dual Clip Loader 2: clip_l.safetensors (pakai header token kalau diisi)
hdr = f"--header='Authorization: Bearer {HF_TOKEN}'" if HF_TOKEN and len(HF_TOKEN) > 10 else ""
sh(f"wget -q --show-progress {hdr} -O '{COMFY}/models/clip/clip_l.safetensors' "
   "'https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors?download=true'")

# VAE: ae.safetensors
sh(f"wget -q --show-progress {hdr} -O '{COMFY}/models/vae/ae.safetensors' "
   "'https://huggingface.co/Comfy-Org/Lumina_Image_2.0_Repackaged/resolve/main/split_files/vae/ae.safetensors?download=true'")

# Upscale model
sh(f"wget -q --show-progress -O '{COMFY}/models/upscale_models/4x_NMKD-Siax_200k.pth' "
   "'https://huggingface.co/Akumetsu971/SD_Anime_Futuristic_Armor/resolve/main/4x_NMKD-Siax_200k.pth?download=true'")

# 7) Start bersih
sh("pkill -f 'ComfyUI/main.py' || true")
sh("pkill -f 'cloudflared' || true")
os.chdir(COMFY)
sh(f"nohup {PY} main.py --listen 0.0.0.0 --port {PORT} > {BASE}/comfyui.log 2>&1 &")

# 8) Cloudflare Tunnel (named token)
if CLOUDFLARE_TUNNEL_TOKEN and len(CLOUDFLARE_TUNNEL_TOKEN) > 20:
    sh(f"nohup {CLOUDFLARED_BIN} tunnel --no-autoupdate run --token '{CLOUDFLARE_TUNNEL_TOKEN}' > {BASE}/cloudflared.log 2>&1 &")
    cf_msg = "‚úÖ Tunnel aktif."
else:
    cf_msg = "‚ö†Ô∏è Token tunnel belum diisi/pendek."

# 9) Health check + log
time.sleep(2)
print("\n==== HEALTH CHECK ====")
sh("curl -sI http://127.0.0.1:8188 || true")
print("\n==== tail comfyui.log ====")
sh("tail -n 80 /content/comfyui.log || true")
print("\n==== tail cloudflared.log ====")
sh("tail -n 60 /content/cloudflared.log || true")

print(textwrap.dedent(f"""
==========================
‚úî Setup selesai & RUN
Local  : http://127.0.0.1:{PORT}
Domain : https://{YOUR_DOMAIN}
Logs   : /content/comfyui.log | /content/cloudflared.log
{cf_msg}
==========================
"""))
