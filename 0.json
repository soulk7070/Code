# =================================================================
# üìù 1) MASUKKAN TOKEN CLOUDFLARE DAN DOMAIN ANDA
# =================================================================
# Token named tunnel dari Cloudflare Zero Trust > Networks > Tunnels
# ‚ö†Ô∏è JANGAN BAGIKAN TOKEN INI KE SIAPA PUN
CLOUDFLARE_TOKEN = "MASUKKAN_TOKEN_TUNNEL_ANDA_YANG_PANJANG_DI_SINI"

# Gunakan http karena di Cloudflare Public Hostname di-map ke HTTP ‚Üí localhost:8188
PUBLIC_DOMAIN = "http://comfyui.domain-anda.com"

# (Opsional) Token Hugging Face untuk file yang butuh otorisasi
HF_TOKEN = "MASUKKAN_TOKEN_HUGGING_FACE_ANDA_DI_SINI_JIKA_PERLU"

# =================================================================
# üöÄ 2) INSTALASI COMFYUI & DEPENDENSI
# =================================================================
print("‚è≥ Memulai instalasi ComfyUI dan dependensi...")
!apt -y update -qq
# xformers opsional; jika tidak diperlukan bisa di-skip
!pip install -q xformers requests

import os, time, subprocess, requests

# Clone ComfyUI jika belum ada
if not os.path.isdir("/content/ComfyUI"):
    print("üîÑ Meng-clone repository ComfyUI...")
    !git clone https://github.com/comfyanonymous/ComfyUI.git /content/ComfyUI

# Pindah ke direktori ComfyUI
%cd /content/ComfyUI

print("üì¶ Menginstall requirements ComfyUI...")
!pip install -q -r requirements.txt

# Pasang ComfyUI-Manager (opsional tapi disarankan)
if not os.path.isdir("custom_nodes/ComfyUI-Manager"):
    print("üß© Menginstall ComfyUI-Manager...")
    !git clone https://github.com/ltdrdata/ComfyUI-Manager.git custom_nodes/ComfyUI-Manager

print("‚úÖ Instalasi selesai.")

# =================================================================
# üì¶ 3) DOWNLOAD MODEL-MODEL YANG DIMINTA
# =================================================================
print("‚è≥ Mengunduh model-model...")
!mkdir -p models/diffusion_models models/clip models/vae models/upscale_models

# --- FLUX Model (GGUF) ---
print("‚¨áÔ∏è Downloading FLUX Model...")
!wget -q -c "https://huggingface.co/city96/FLUX.1-dev-gguf/resolve/main/flux1-dev-Q4_0.gguf?download=true" -O models/diffusion_models/flux1-dev-Q4_0.gguf

# --- CLIP Models (GGUF) ---
print("‚¨áÔ∏è Downloading CLIP Models...")
!wget -q -c "https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q5_K_M.gguf?download=true" -O models/clip/t5-v1_1-xxl-encoder-Q5_K_M.gguf
!wget -q -c "https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q4_K_S.gguf?download=true" -O models/clip/t5-v1_1-xxl-encoder-Q4_K_S.gguf

# --- Dual Clip Loader 2 (clip_l.safetensors) ---
print("‚¨áÔ∏è Downloading Dual Clip Loader 2 (clip_l.safetensors)...")
if HF_TOKEN and HF_TOKEN != "MASUKKAN_TOKEN_HUGGING_FACE_ANDA_DI_SINI_JIKA_PERLU":
    os.environ["HF_TOKEN"] = HF_TOKEN
    !wget -q --header="Authorization: Bearer $HF_TOKEN" -c "https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors?download=true" -O models/clip/clip_l.safetensors
else:
    !wget -q -c "https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors?download=true" -O models/clip/clip_l.safetensors

# --- VAE (ae.safetensors) ---
print("‚¨áÔ∏è Downloading VAE (ae.safetensors)...")
if HF_TOKEN and HF_TOKEN != "MASUKKAN_TOKEN_HUGGING_FACE_ANDA_DI_SINI_JIKA_PERLU":
    !wget -q --header="Authorization: Bearer $HF_TOKEN" -c "https://huggingface.co/Comfy-Org/Lumina_Image_2.0_Repackaged/resolve/main/split_files/vae/ae.safetensors?download=true" -O models/vae/ae.safetensors
else:
    !wget -q -c "https://huggingface.co/Comfy-Org/Lumina_Image_2.0_Repackaged/resolve/main/split_files/vae/ae.safetensors?download=true" -O models/vae/ae.safetensors

# --- Upscale Model ---
print("‚¨áÔ∏è Downloading Upscale Model (4x_NMKD-Siax_200k.pth)...")
if HF_TOKEN and HF_TOKEN != "MASUKKAN_TOKEN_HUGGING_FACE_ANDA_DI_SINI_JIKA_PERLU":
    !wget -q --header="Authorization: Bearer $HF_TOKEN" -c "https://huggingface.co/Akumetsu971/SD_Anime_Futuristic_Armor/resolve/main/4x_NMKD-Siax_200k.pth?download=true" -O models/upscale_models/4x_NMKD-Siax_200k.pth
else:
    !wget -q -c "https://huggingface.co/Akumetsu971/SD_Anime_Futuristic_Armor/resolve/main/4x_NMKD-Siax_200k.pth?download=true" -O models/upscale_models/4x_NMKD-Siax_200k.pth

print("‚úÖ Semua model selesai diunduh.")

# =================================================================
# üåê 4) JALANKAN COMFYUI & HUBUNGKAN KE DOMAIN (HTTP)
# =================================================================
print("üöÄ Menjalankan ComfyUI...")
# Hentikan proses lama (jika ada)
!pkill -f "ComfyUI/main.py" || true

# Jalankan ComfyUI di background
comfyui_process = subprocess.Popen(
    ["python", "main.py", "--port", "8188", "--listen"],
    stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT
)

# Readiness check (lebih aman daripada sleep tetap)
def wait_ready(timeout=180):
    url = "http://127.0.0.1:8188"
    start = time.time()
    while time.time() - start < timeout:
        try:
            r = requests.get(url, timeout=2)
            if r.status_code == 200:
                return True
        except Exception:
            pass
        time.sleep(2)
    return False

if not wait_ready(180):
    print("üõë ComfyUI belum siap. Tampilkan log terakhir:")
    !tail -n 120 /content/comfyui.log || true
else:
    print("‚úÖ ComfyUI siap di http://127.0.0.1:8188")

    # Unduh cloudflared bila belum ada
    if not os.path.exists('/content/cloudflared'):
        print("‚¨áÔ∏è Mengunduh Cloudflared...")
        !wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O /content/cloudflared
        !chmod +x /content/cloudflared

    if not CLOUDFLARE_TOKEN or CLOUDFLARE_TOKEN == "MASUKKAN_TOKEN_TUNNEL_ANDA_YANG_PANJANG_DI_SINI":
        print("üõë ERROR: Harap masukkan Token Cloudflare Anda di Bagian 1.")
    else:
        # Hentikan tunnel lama (jika ada)
        !pkill -f "cloudflared" || true

        print(f"üîå Menjalankan Cloudflare Tunnel (HTTP ‚Üí localhost:8188) untuk {PUBLIC_DOMAIN} ...")
        cloudflared_process = subprocess.Popen(
            ['/content/cloudflared', 'tunnel', '--no-autoupdate', 'run', '--token', CLOUDFLARE_TOKEN],
            stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT
        )

        time.sleep(2)
        print("\nüéâ ComfyUI Siap Digunakan! üéâ")
        print(f"üîó Akses melalui domain pribadi Anda: {PUBLIC_DOMAIN}")
        print("üìÑ Log ComfyUI: /content/comfyui.log")
        print("üìÑ Log Cloudflared: /content/cloudflared.log")
