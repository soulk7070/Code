# ==============================
# üì¶ SETUP + DOWNLOAD + RUN
# ==============================
# TODO: isi variabel ini sebelum run
CLOUDFLARE_TUNNEL_TOKEN = "ISI_TOKEN_TUNNEL_CLOUDFLARE_KAMU"
YOUR_DOMAIN = "comfy.domainkamu.com"   # opsional, hanya untuk info cetak
HF_TOKEN = "ISI_TOKEN_HUGGINGFACE_BILA_PERLU"  # boleh kosong; beberapa link HF publik

INSTALL_MANAGER = True  # Pasang ComfyUI-Manager agar mudah install custom nodes

import os, sys, subprocess, textwrap, shutil, time

BASE = "/content"
COMFY = f"{BASE}/ComfyUI"
PY = sys.executable
PORT = 8188
CLOUDFLARED_BIN = f"{BASE}/cloudflared-linux-amd64"

def run(cmd):
    print("‚Üí", cmd)
    p = subprocess.run(cmd, shell=True, text=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    print(p.stdout)

# 1) Dependensi ringan + cloudflared
run("apt -y update -qq")
if not os.path.exists(CLOUDFLARED_BIN):
    run(f"wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O {CLOUDFLARED_BIN}")
    run(f"chmod +x {CLOUDFLARED_BIN}")

# 2) Clone ComfyUI (jika belum)
if not os.path.isdir(COMFY):
    run(f"git clone -q https://github.com/comfyanonymous/ComfyUI {COMFY}")
else:
    print("‚úî ComfyUI sudah ada, skip clone.")

# 3) (Opsional) ComfyUI-Manager
if INSTALL_MANAGER:
    mgr = f"{COMFY}/custom_nodes/ComfyUI-Manager"
    if not os.path.isdir(mgr):
        run(f"git clone -q https://github.com/ltdrdata/ComfyUI-Manager {mgr}")
    else:
        print("‚úî ComfyUI-Manager sudah ada.")

# 4) Custom Node: ComfyUI-Crystools
crys = f"{COMFY}/custom_nodes/ComfyUI-Crystools"
if not os.path.isdir(crys):
    run(f"cd {COMFY}/custom_nodes && git clone https://github.com/crystian/ComfyUI-Crystools.git")
else:
    print("‚úî ComfyUI-Crystools sudah ada.")

# 5) Pip packages untuk Crystools
run(f"{PY} -m pip -q install --upgrade pip")
run(f"{PY} -m pip -q install deepdiff piexif py-cpuinfo pynvml requests tqdm")

# 6) Buat folder model yang dibutuhkan
paths = {
    "diffusion_models": f"{COMFY}/models/diffusion_models",
    "clip":             f"{COMFY}/models/clip",
    "vae":              f"{COMFY}/models/vae",
    "upscale_models":   f"{COMFY}/models/upscale_models",
}
for p in paths.values():
    os.makedirs(p, exist_ok=True)

# 7) Download MODELS (sesuai listmu)
# ‚Äî Flux dev (GGUF)
run(f"wget -q --show-progress -O '{paths['diffusion_models']}/flux1-dev-Q4_0.gguf' "
    "'https://huggingface.co/city96/FLUX.1-dev-gguf/resolve/main/flux1-dev-Q4_0.gguf?download=true'")

# ‚Äî T5 encoders (GGUF)
run(f"wget -q --show-progress -O '{paths['clip']}/t5-v1_1-xxl-encoder-Q5_K_M.gguf' "
    "'https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q5_K_M.gguf?download=true'")

run(f"wget -q --show-progress -O '{paths['clip']}/t5-v1_1-xxl-encoder-Q4_K_S.gguf' "
    "'https://huggingface.co/city96/t5-v1_1-xxl-encoder-gguf/resolve/main/t5-v1_1-xxl-encoder-Q4_K_S.gguf?download=true'")

# ‚Äî Dual Clip Loader (GGUF) 2 ‚Üí clip_l.safetensors (pakai HF token jika ada)
if HF_TOKEN and len(HF_TOKEN) > 10:
    run(f"wget -q --show-progress --header='Authorization: Bearer {HF_TOKEN}' "
        f"-O '{paths['clip']}/clip_l.safetensors' "
        "'https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors?download=true'")
else:
    # coba tanpa header (banyak repo publik)
    run(f"wget -q --show-progress -O '{paths['clip']}/clip_l.safetensors' "
        "'https://huggingface.co/comfyanonymous/flux_text_encoders/resolve/main/clip_l.safetensors?download=true'")

# ‚Äî VAE ‚Üí ae.safetensors (pakai HF token jika ada)
if HF_TOKEN and len(HF_TOKEN) > 10:
    run(f"wget -q --show-progress --header='Authorization: Bearer {HF_TOKEN}' "
        f"-O '{paths['vae']}/ae.safetensors' "
        "'https://huggingface.co/Comfy-Org/Lumina_Image_2.0_Repackaged/resolve/main/split_files/vae/ae.safetensors?download=true'")
else:
    run(f"wget -q --show-progress -O '{paths['vae']}/ae.safetensors' "
        "'https://huggingface.co/Comfy-Org/Lumina_Image_2.0_Repackaged/resolve/main/split_files/vae/ae.safetensors?download=true'")

# ‚Äî Upscale model
run(f"wget -q --show-progress -O '{paths['upscale_models']}/4x_NMKD-Siax_200k.pth' "
    "'https://huggingface.co/Akumetsu971/SD_Anime_Futuristic_Armor/resolve/main/4x_NMKD-Siax_200k.pth?download=true'")

# 8) Bersihkan proses sisa & RUN ComfyUI
run("pkill -f 'cloudflared' || true")
run("pkill -f 'ComfyUI/main.py' || true")
os.chdir(COMFY)
run(f"nohup {PY} main.py --listen 0.0.0.0 --port {PORT} > {BASE}/comfyui.log 2>&1 &")

# 9) Jalankan Cloudflare Tunnel (Named Tunnel token)
if CLOUDFLARE_TUNNEL_TOKEN and len(CLOUDFLARE_TUNNEL_TOKEN) > 20:
    run(f"nohup {CLOUDFLARED_BIN} tunnel --no-autoupdate run --token '{CLOUDFLARE_TUNNEL_TOKEN}' > {BASE}/cloudflared.log 2>&1 &")
    cf_msg = "‚úÖ Cloudflare Tunnel aktif (named tunnel). Pastikan Public Hostname diarahkan ke http://localhost:8188."
else:
    cf_msg = "‚ö†Ô∏è CLOUDFLARE_TUNNEL_TOKEN belum diisi/terlalu pendek. Isi token untuk pakai domain Cloudflare."

print(textwrap.dedent(f"""
==========================
üéâ SETUP + DOWNLOAD SELESAI
- ComfyUI     : http://127.0.0.1:{PORT}
- Domainmu    : https://{YOUR_DOMAIN}  (jika routing di Cloudflare sudah benar)
- Log ComfyUI : {BASE}/comfyui.log
- Log CF      : {BASE}/cloudflared.log
{cf_msg}
==========================
"""))
